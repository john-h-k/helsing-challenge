services:
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"

  # forecast:
  #   container_name: forecast
  #   build:
  #     context: ./forecast
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - elasticsearch
  #   ports:
  #     - "5050:5050"
  #   volumes:
  #     - .:/app
  #   command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "5050", "--reload"]
  #   env_file: .env

  frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    ports:
      - "3000:3000"

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./policy:/app/policy
    command: ["uv", "run", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]
    ports:
      - "8080:8080"
    environment:
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8080
    env_file: .env

  rag:
    container_name: rag
    build:
      context: ./rag
      dockerfile: Dockerfile
    volumes:
      - ./rag:/app
    command: ["uv", "run", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    ports:
      - "8000:8000"
    environment:
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
    env_file: .env

volumes:
  backend:
  rag:
